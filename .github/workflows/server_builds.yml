name: ‚òÅ Server Builds
on: [push, pull_request]

# Global Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONSFLAGS: verbose=yes warnings=all werror=yes debug_symbols=no module_mono_enabled=no mono_glue=no

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-server
  cancel-in-progress: true

jobs:
  build-server:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - name: Linux Headless (target=release_debug, tools=yes)
#            cache-name: server-editor-mono
#            target: release_debug
#            tools: true
#            bin: "./bin/godot_server.x11.opt.tools.64"
#            publish-release: true
#            version: "3.4"

          - name: Linux Server (target=release, tools=no)
            cache-name: server-template-mono
            target: release
            tools: false

    steps:
      - uses: actions/checkout@v2

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
              libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        uses: ./.github/actions/godot-build
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=server tools=yes target=release_debug module_mono_enabled=yes mono_glue=no

  linux-server:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux Headless (target=release_debug, tools=yes)
            cache-name: server-editor-mono
            target: release_debug
            tools: true
            bin: "./bin/godot_server.x11.opt.tools.64"
            publish-release: true
            version: "3.3.4"

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm scons

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: linux-server-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-3-xmodules-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-3-xmodules-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-3-xmodules-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-3-xmodules
        continue-on-error: true

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: server
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=server tools=yes target=release_debug

      - name: Upload binaries to release
        if: ${{ matrix.publish-release }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.bin }}
          asset_name: Godot-3.x-modules_v${{matrix.version}}_headless_nightly_linux.64
          tag: Godot-continuous-release
          overwrite: true
          body: "Bleeding edge release for those who like to live on the edge :)"
